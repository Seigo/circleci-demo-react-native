version: 2
jobs:
  node:
    working_directory: ~/demo-react-native
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/demo-react-native
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  android:
    working_directory: ~/demo-react-native/android
    docker:
      - image: circleci/android:api-27-node8-alpha
    steps:
      - checkout:
          path: ~/demo-react-native

      - attach_workspace:
          at: ~/demo-react-native

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run:
          name: accept Android SDK licenses
          command: |
            sdkmanager --update
            (echo y; echo y; echo y; echo y; echo y; echo y) | $ANDROID_HOME/tools/bin/sdkmanager --licenses
            
      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: fastlane tests
          command: |
            mkdir -p test-results/fastlane
            bundle exec fastlane test
            mv fastlane/report.xml test-results/fastlane

      - store_test_results:
          path: test-results

      # - store_artifacts:
      #     path: test-results

      - run:
          name: fastlane simplebuild
          command: |
            mkdir -p simplebuild-results/fastlane
            bundle exec fastlane simplebuild

      # - store_artifacts:
      #     path: simplebuild-results

      - run:
          name: upload to Github Releases
          command: | 
            curl -O https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz
            tar xvf go1.12.5.linux-amd64.tar.gz
            sudo chown -R root:root ./go
            sudo mv go /usr/local
            export GOPATH=$HOME/work
            export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
            go get -u github.com/tcnksm/ghr
            echo $GITHUB_TOKEN, $CIRCLE_PROJECT_USERNAME, $CIRCLE_PROJECT_REPONAME, $CIRCLE_SHA1, $CIRCLE_BRANCH, $CIRCLE_TAG, $CIRCLE_WORKFLOW_ID
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_BRANCH}-${CIRCLE_TAG}-${CIRCLE_WORKFLOW_ID} ./app/build/outputs/apk/

workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "59 23 * * *"
          filters:
            branches:
              only:
                - master
                - beta
    jobs:
      - node
      - android:
          requires:
            - node
  forcedbuild:
    jobs:
      - node:
          filters:
            branches:
              only: /^forcedbuild-.*/
      - android:
          filters:
            branches:
              only: /^forcedbuild-.*/
          requires:
            - node
